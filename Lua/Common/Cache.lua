local Object = require("common.Object")local Cache = Object:extends()function Cache:onNew()    self.objects = {}    self.maxSize = self.maxSize or 0endfunction Cache:put(obj)    table.insert(self.objects, obj)    self:purge()endfunction Cache:get(obj)    local tIndex = nil    for k, v in ipairs(self.objects) do        if v == obj then            tIndex = k        end    end    if tIndex then        table.remove(self.objects, tIndex)    endendfunction Cache:purge()    while (#self.objects > self.maxSize) do        self.objects[1]:onCacheOut()        table.remove(self.objects, 1)    endendreturn Cache